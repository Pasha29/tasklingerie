{"version":3,"sources":["Components/Header/Header.module.scss","App.module.scss","materials/images/svg/header_logo.svg","Components/Main/Main.module.scss","Components/Header/Header.js","Components/Swiper.js","Components/Main/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","css","href","src","logo","alt","SliderForText","slidesPerView","autoplay","delay","map","item","key","nameclass","text","Main","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yFACAA,EAAOC,QAAU,CAAC,OAAS,uBAAuB,QAAU,wBAAwB,mBAAmB,iCAAiC,aAAe,6BAA6B,aAAe,+B,mBCAnMD,EAAOC,QAAU,CAAC,UAAY,yB,mBCD9BD,EAAOC,QAAU,IAA0B,yC,sDCC3CD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,eAAiB,6BAA6B,oBAAoB,gCAAgC,sBAAsB,kCAAkC,qBAAqB,iCAAiC,gBAAkB,8BAA8B,qBAAqB,iCAAiC,uBAAuB,mCAAmC,sBAAsB,kCAAkC,OAAS,uB,gNCoC9cC,EAjCA,WACX,OACI,4BAAQC,UAAWC,IAAG,QAClB,yBAAKD,UAAWC,IAAG,SAEf,yBAAKD,UAAWC,IAAG,cACf,uBAAGC,KAAK,IAAIF,UAAWC,IAAI,sBACvB,yBAAKD,UAAWC,IAAI,oBAAqBE,IAAKC,IAAMC,IAAI,WAIhE,yBAAKL,UAAWC,IAAG,aACf,wBAAID,UAAWC,IAAG,cACd,wBAAID,UAAWC,IAAG,cACd,uBAAGC,KAAK,KAAKF,UAAWC,IAAG,cAA3B,eAEJ,wBAAID,UAAWC,IAAG,cACd,uBAAGC,KAAK,KAAKF,UAAWC,IAAG,cAA3B,cAEJ,wBAAID,UAAWC,IAAG,cACd,uBAAGC,KAAK,KAAKF,UAAWC,IAAG,cAA3B,cAEJ,wBAAID,UAAWC,IAAG,cACd,uBAAGC,KAAK,KAAKF,UAAWC,IAAG,cAA3B,iB,iCCDbK,G,MArBO,WAclB,OACI,kBAAC,IAdQ,CACTC,cAAe,EACfC,SAAU,CACNC,MAAO,MAIL,CACN,CAAE,IAAO,EAAG,KAAQ,eAAgB,UAAa,sBACjD,CAAE,IAAO,EAAG,KAAQ,eAAgB,UAAa,wBACjD,CAAE,IAAO,EAAG,KAAQ,eAAgB,UAAa,wBAKxCC,KAAK,SAAAC,GAAI,OAAI,yBAAKC,IAAKD,EAAKC,IAAKZ,UAAWC,IAAIU,EAAKE,YAAaF,EAAKG,YCAzEC,EAjBF,WACX,OACE,0BAAMf,UAAWC,IAAG,MAClB,6BAASD,UAAWC,IAAG,SACrB,yBAAKD,UAAWC,IAAG,gBACjB,yBAAKD,UAAWC,IAAI,uBACpB,yBAAKD,UAAWC,IAAI,yBACpB,yBAAKD,UAAWC,IAAI,0BAGxB,6BAASD,UAAWC,IAAG,iBACrB,kBAAC,EAAD,S,QCIOe,EAXH,WACV,OACE,kBAAC,IAAD,KACE,yBAAKhB,UAAWC,IAAG,WACjB,kBAAC,EAAD,MACA,kBAAC,EAAD,SCDYgB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.db5d4473.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2Jtaz\",\"wrapper\":\"Header_wrapper__OWyp9\",\"header__logo-pic\":\"Header_header__logo-pic__2zzEe\",\"header__list\":\"Header_header__list__1N227\",\"header__link\":\"Header_header__link__1jIPS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1H_sO\"};","module.exports = __webpack_public_path__ + \"static/media/header_logo.0da9d3c4.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__MT8o_\",\"content__image\":\"Main_content__image__xylzv\",\"content__left-img\":\"Main_content__left-img__24LO-\",\"content__middle-img\":\"Main_content__middle-img__qi0dn\",\"content__right-img\":\"Main_content__right-img__1ZhQb\",\"content__slider\":\"Main_content__slider__1-JwH\",\"content__left-text\":\"Main_content__left-text__2YV2l\",\"content__middle-text\":\"Main_content__middle-text__STDDc\",\"content__right-text\":\"Main_content__right-text__3LxIb\",\"dragme\":\"Main_dragme__18q9a\"};","import React from 'react';\r\nimport css from './Header.module.scss';\r\nimport logo from '../../materials/images/svg/header_logo.svg';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className={css['header']}>\r\n            <div className={css['wrapper']}>\r\n                \r\n                <div className={css['header__logo']}>\r\n                    <a href=\"/\" className={css['header__logo-link']}>\r\n                        <img className={css['header__logo-pic']} src={logo} alt=\"logo\"/>\r\n                    </a>\r\n                </div>\r\n\r\n                <nav className={css['header__nav']}>\r\n                    <ul className={css['header__list']}>\r\n                        <li className={css['header__item']}>\r\n                            <a href=\"/1\" className={css['header__link']}>Commercial</a>\r\n                        </li>\r\n                        <li className={css['header__item']}>\r\n                            <a href=\"/2\" className={css['header__link']}>Editorial</a>\r\n                        </li>\r\n                        <li className={css['header__item']}>\r\n                            <a href=\"/3\" className={css['header__link']}>Reportage</a>\r\n                        </li>\r\n                        <li className={css['header__item']}>\r\n                            <a href=\"/4\" className={css['header__link']}>Meet Me</a>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Swiper from 'react-id-swiper';\r\nimport css from './Main/Main.module.scss';\r\nimport 'swiper/swiper.scss'\r\n\r\nconst SliderForText = () => {\r\n    let params = {\r\n        slidesPerView: 1,\r\n        autoplay: {\r\n            delay: 5000,\r\n          },\r\n    };\r\n    \r\n    let arr = [\r\n        { 'key': 1, 'text': 'Ink Lingerie', 'nameclass': 'content__left-text' },\r\n        { 'key': 2, 'text': 'Ink Lingerie', 'nameclass': 'content__middle-text' },\r\n        { 'key': 3, 'text': 'Ink Lingerie', 'nameclass': 'content__right-text' }\r\n    ]\r\n    \r\n    return (\r\n        <Swiper {...params}>\r\n            {arr.map( item => <div key={item.key} className={css[item.nameclass]}>{item.text}</div>)}\r\n        </Swiper>\r\n    );\r\n}\r\n\r\nexport default SliderForText;\r\n","import React from 'react';\r\nimport css from './Main.module.scss';\r\nimport SliderForText from '../Swiper';\r\n\r\nconst Main = () => {\r\n  return (\r\n    <main className={css['main']}>\r\n      <section className={css['content']}>\r\n        <div className={css['content__image']}>\r\n          <div className={css['content__left-img']} />\r\n          <div className={css['content__middle-img']} />\r\n          <div className={css['content__right-img']} />          \r\n        </div>\r\n      </section>\r\n      <section className={css['content__slider']}>\r\n        <SliderForText />\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;","import React from 'react';\nimport '../src/materials/fonts/fonts.css';\nimport './materials/resetstyles/reset.css';\nimport css from './App.module.scss';\nimport Header from './Components/Header/Header.js';\nimport Main from './Components/Main/Main.js';\nimport {HashRouter} from 'react-router-dom';\n\nconst App = () => {\n  return (\n    <HashRouter>\n      <div className={css['container']}>\n        <Header />\n        <Main />\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}